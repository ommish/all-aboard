const mongoose = require('mongoose');
const { Schema } = mongoose;
const bonus = require('./bonus');
const proficiency = require('./proficiency');

const characterSchema = new Schema({
	name: { type: String, default: '' },
	_user: { type: Schema.Types.ObjectId, ref: 'User' },
	armor: { type: Schema.Types.ObjectId, ref: 'ArmorClass' },
	bonuses: { type: [bonus.bonusSchema] },
	race: { type: Schema.Types.ObjectId, ref: 'Race' },
	charClass: { type: Schema.Types.ObjectId, ref: 'CharClass' },
	background: { type: Schema.Types.ObjectId, ref: 'Background' },
	alignment: {
		type: String,
		default: '',
		enum: [
			'',
			'Chaotic Evil',
			'Neutral Evil',
			'Lawful Evil',
			'Chaotic Neutral',
			'True Neutral',
			'Lawful Neutral',
			'Chaotic Good',
			'Neutral Good',
			'Lawful Good'
		]
	},
	playerName: { type: String, default: '' },
	shielded: { type: Boolean, default: false },
	level: { type: Number, min: 1, max: 20, default: 1 },
	inspiration: { type: Number, min: 0, max: 10, default: 0 },
	maxHealth: { type: Number, min: 0, max: 999, default: 0 },
	currentHealth: { type: Number, min: 0, max: 999, default: 0 },
	speed: { type: Number, min: 0, max: 999, default: 0 },
	armorClass: { type: Number, min: 0, max: 100, default: 0 },
	strength: { type: Number, min: 0, max: 50, default: 0 },
	dexterity: { type: Number, min: 0, max: 50, default: 0 },
	constitution: { type: Number, min: 0, max: 50, default: 0 },
	intelligence: { type: Number, min: 0, max: 50, default: 0 },
	wisdom: { type: Number, min: 0, max: 50, default: 0 },
	charisma: { type: Number, min: 0, max: 50, default: 0 },
	strengthSaveProficiency: { type: proficiency.proficiencySchema, default: { name: 'strengthSaveProficiency', is: false } },
	dexteritySaveProficiency: { type: proficiency.proficiencySchema, default: { name: 'dexteritySaveProficiency', is: false }  },
	constitutionSaveProficiency: { type: proficiency.proficiencySchema, default: { name: 'constitutionSaveProficiency', is: false }  },
	intelligenceSaveProficiency: { type: proficiency.proficiencySchema, default: { name: 'intelligenceSaveProficiency', is: false }  },
	wisdomSaveProficiency: { type: proficiency.proficiencySchema, default: { name: 'wisdomSaveProficiency', is: false }  },
	charismaSaveProficiency: { type: proficiency.proficiencySchema, default: { name: 'charismaSaveProficiency', is: false }  },
	acrobaticsProficiency: { type: proficiency.proficiencySchema, default: { name: 'acrobaticsProficiency', is: false }  },
	animalHandlingProficiency: { type: proficiency.proficiencySchema, default: { name: 'animalHandlingProficiency', is: false }  },
	arcanaProficiency: { type: proficiency.proficiencySchema, default: { name: 'arcanaProficiency', is: false }  },
	athleticsProficiency: { type: proficiency.proficiencySchema, default: { name: 'athleticsProficiency', is: false }  },
	deceptionProficiency: { type: proficiency.proficiencySchema, default: { name: 'deceptionProficiency', is: false }  },
	historyProficiency: { type: proficiency.proficiencySchema, default: { name: 'historyProficiency', is: false }  },
	insightProficiency: { type: proficiency.proficiencySchema, default: { name: 'insightProficiency', is: false }  },
	intimidationProficiency: { type: proficiency.proficiencySchema, default: { name: 'intimidationProficiency', is: false }  },
	investigationProficiency: { type: proficiency.proficiencySchema, default: { name: 'investigationProficiency', is: false }  },
	medicineProficiency: { type: proficiency.proficiencySchema, default: { name: 'medicineProficiency', is: false }  },
	natureProficiency: { type: proficiency.proficiencySchema, default: { name: 'natureProficiency', is: false }  },
	perceptionProficiency: { type: proficiency.proficiencySchema, default: { name: 'perceptionProficiency', is: false }  },
	performanceProficiency: { type: proficiency.proficiencySchema, default: { name: 'performanceProficiency', is: false }  },
	persuasionProficiency: { type: proficiency.proficiencySchema, default: { name: 'persuasionProficiency', is: false }  },
	religionProficiency: { type: proficiency.proficiencySchema, default: { name: 'religionProficiency', is: false }  },
	sleightOfHandProficiency: { type: proficiency.proficiencySchema, default: { name: 'sleightOfHandProficiency', is: false }  },
	stealthProficiency: { type: proficiency.proficiencySchema, default: { name: 'stealthProficiency', is: false }  },
	survivalProficiency: { type: proficiency.proficiencySchema, default: { name: 'survivalProficiency', is: false }  },
	platinum: { type: Number, default: 0, min: 0},
	gold: { type: Number, default: 0, min: 0},
	silver: { type: Number, default: 0, min: 0},
	copper: { type: Number, default: 0, min: 0},
	age: { type: String, default: '' },
	height: { type: String, default: '' },
	weight: { type: String, default: '' },
	eyes: { type: String, default: '' },
	skin: { type: String, default: '' },
	hair: { type: String, default: '' },
	backstory: { type: String, default: '' },
	bonuses: { type: [bonus.bonusSchema] },
	languageProficiencies: { type: [proficiency.proficiencySchema] },
	armorProficiencies: { type: [proficiency.proficiencySchema] },
	weaponProficiencies: { type: [proficiency.proficiencySchema] },
	toolProficiencies: { type: [proficiency.proficiencySchema] },
	equipment: { type: String, default: '[]' },
	weapons: { type: String, default: '[]' }, //eventually make weapon model
	hitDice: { type: Number, default: 1, min: 0 }
});

mongoose.model('Character', characterSchema);
